### Questions

1. What is responsible for defining the routes of the `games` resource?

  create_router.js file

2. What do you notice about the folder structure?  Whats the client responsible for? Whats the server responsible for?

  Client folders are responsible for front end and server files for back end

3. What are the the responsibilities of server.js?

  Configuration of server and set-up of routers

4. What are the responsibilities of the `gamesRouter`?

uses a specific route to send data to correct path


5. What process does the the client (front-end) use to communicate with the server?

  uses a fetch

6. What optional second argument does the `fetch` method take? And what is it used for in this application? Hint: See [Using Fetch](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch) on the MDN docs

  POST

7. Which of the games API routes does the front-end application consume (i.e. make requests to)?


  view/add http://localhost:3000/api/games/
  delete http://localhost:3000/api/games/id


8. What are we using the [MongoDB Driver](http://mongodb.github.io/node-mongodb-native/) for?

to store and retrieve data from a database

## Extension

Why do we need to use [`ObjectId`](https://mongodb.github.io/node-mongodb-native/api-bson-generated/objectid.html) from the MongoDB driver?

to update and delete objects

Add to your diagram the dataflow for removing a game.
